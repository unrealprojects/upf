$Control-Border-Width: 1px;
$Control-Border-Color: $Clr-Slate;
$Control-Border-Color-Disabled: lighten($Clr-Slate, 20%);
$Control-Bg-Color-Disabled: lighten($Clr-Slate, 40%);
$Control-Border-Color-Focus: $Clr-Main;
$Control-Border-Radius: 6px;
$Control-Padding: 10px;
$Control-Left-Column-Width: 30%;
$Control-Right-Column-Width: 100% - $Control-Left-Column-Width;
$Control-Font-Size: 16px;
$Control-Line-Height: $Control-Font-Size;
$Control-Height: $Control-Line-Height + ($Control-Padding * 2) + ($Control-Border-Width * 2);
$Control-Color: $Clr-Slate;

$Control-Bg-Color: white;
$Control-Bg-Color-Focus: lighten($Clr-Main, 55%);

$Control-Textarea-Line-Height: ceil($Control-Font-Size * 1.45);
$Control-Textarea-Min-Rows: 2;
$Control-Textarea-Min-Height: ($Control-Textarea-Line-Height * 2) + ($Control-Padding * 2) + ($Control-Border-Width * 2);

$Control-Button-Bg-Color: $Clr-Main;
$Control-Button-Bg-Color-Hover: darken($Clr-Main,10%);
$Control-Button-Border-Color:  darken($Clr-Main,10%);
 
.Form-Group + .Form-Group
{
	margin-top: $size-xl;
}
.Control-Group
{
	@extend ._Clearfix;
	label
	{
		height: $Control-Height;
		padding: $Control-Padding;
		border: $Control-Border-Width solid transparent;

		font-size: $Control-Font-Size;
		line-height: $Control-Line-Height;
	}
	input,
	select,
	textarea
	{
		width: 100%;
		height: $Control-Height;
		outline: 0;
		padding: $Control-Padding;
		border: $Control-Border-Width $Control-Border-Color solid;
		border-radius: $Control-Border-Radius;

		background-color: $Control-Bg-Color;
		color: $Control-Color;
		font-size: $Control-Font-Size;
		line-height: $Control-Line-Height;
		box-shadow: 0 0 2px white inset,
		0 1px 3px rgba(0,0,0,0.2) inset;
		&:focus
		{
			border-color: $Control-Border-Color-Focus;
			background-color: $Control-Bg-Color-Focus;

			box-shadow: 0 0 1px white inset,
			0 1px 3px rgba(0,0,0,0.2) inset,
			0 0 5px $Clr-Main;
		}
	}
	input[disabled]
	{
		border-color: $Control-Border-Color-Disabled;
		background-color: $Control-Bg-Color-Disabled;
		cursor: not-allowed;
	}
	input.Ghost
	{
		border-color: transparent;
		background: transparent;
		box-shadow: none;
		&:focus
		{

		}
	}
	input.Error
	{
		color: $Clr-Error;
		border-color: $Clr-Error;
	}
	select
	{
		-webkit-appearance: none;
		background-color: white;
	}
	textarea
	{
		resize: vertical;
		line-height: $Control-Textarea-Line-Height;
		min-height: $Control-Textarea-Min-Height;
	}
	input[type='submit'],
	input[type='button'],
	button
	{
		border-color: $Control-Button-Border-Color;
		background-color: $Control-Button-Bg-Color;
		color: white;
		cursor: pointer;
		&:hover
		{
			background-color: $Control-Button-Bg-Color-Hover;
		}
	}
	& + .Control-Group
	{
		margin-top: $size-n;
	}
	.Input-Group.Error
	{
		color: white;
		background-color: $Clr-Error;
		border-radius: $Control-Border-Radius;
		input.Error,
		select.Error,
		textarea.Error
		{
			border-color: $Clr-Error;
			color: $Clr-Error;
		}
	}
	.Input-Group .Message
	{
		display: block;
		padding: $Control-Padding;
		&.Error
		{
			color: white;
		}
	}
	.Input-Group.Merge
	{
		input
		{
			border-radius: 0;
			&:first-child
			{
				border-right: 0;
				border-radius: $Control-Border-Radius 0 0 $Control-Border-Radius;
			}
			&:last-child
			{
				border-left: 0;
				border-radius: 0 $Control-Border-Radius $Control-Border-Radius 0;
			}
		}
	}
	.Input-Group.Vertical
	{
		input
		{
			display: block;
			width: 100%;
			margin: 0;
			border-radius: 0;
			&:first-child
			{
				border-bottom: 0;
				border-radius: $Control-Border-Radius $Control-Border-Radius 0 0;
			}
			&:last-child
			{
				border-top: 0;
				border-radius: 0 0 $Control-Border-Radius $Control-Border-Radius;
			}
		}
	}
	.Input-Group.Prefix,
	.Input-Group.Postfix
	{
		span, label
		{
			padding: $Control-Padding;
			height: $Control-Height;
			border: $Control-Border-Width $Control-Border-Color solid;
			background-color: #eee;

			text-align: center;
			font-size: $Control-Font-Size - 2px;
			line-height: $Control-Line-Height;
			color: #888;
			box-shadow: 0 0 1px white inset;
		}
	}
	.Input-Group.Prefix
	{
		span, label
		{
			border-radius: $Control-Border-Radius 0 0 $Control-Border-Radius;
		}
	}
	.Input-Group.Postfix
	{
		span
		{
			border-radius: 0 $Control-Border-Radius $Control-Border-Radius 0;

		}
	}
	.Input-Group.Button
	{
		input[type='button'],
		input[type='submit'],
		button
		{

		}
	}
	.Input-Group.Upload
	{
		input[type='file']
		{
			display: block;
			width: 100%;
		}
		ul
		{
			margin-top: $size-n;
			li
			{
				position: relative;
				overflow: hidden;
				a.Link-Delete
				{
					position: absolute;
					display: block;
					padding: $Control-Padding;
					right: 0;
					bottom: - ($Control-Height + 4px);
					width: 100%;
					background-color: $Clr-Main;
					color: white;
				}
				img
				{
					width: 100%;
				}
				&:hover a
				{
					bottom: 0;
				}
			}
		}
	}
}

// FIX reCaptcha
#recaptcha_widget_div{
  display: inline-block;
  width:70%;
}

#recaptcha_widget_div .recaptchatable {
  border: none !important;
  width: 100%;
  padding-bottom: 10px !important;
  display: block;
}


#recaptcha_widget_div .recaptchatable .recaptcha_image_cell,
#recaptcha_widget_div .recaptchatable td{
  padding: 0px 7px 0px 0px !important;
}

#recaptcha_widget_div .recaptchatable #recaptcha_image{
  margin: 0px;
  border:none !important;
}

dl.Tabs {
	clear: both;
	@extend ._Clearfix;

	dt {
		margin-left: -1px;
		position: 		relative;
		display: 		table;
		width: 			30%;
		float: 			left;
		min-height: 	48px;
		padding: 		$size-xs 0;
		background-color: $Clr-Clouds;
		color:			$Clr-Midnight-Blue;
		text-align: 	center;
		cursor: 		pointer;

		@include Transition(#{background-color, color}, 0.5s);

		& > span {
			vertical-align: 	middle;
			display: 			table-cell;
			font-size: 			85%;
		}

		&:hover {
			background-color: $Clr-Silver;
		}

		&.Active {
			background-color: $Clr-Midnight-Blue;
			color: #fff;
		}
		&.Wide {
			width: 40%;
		}

        &.inTwo{
            width:50%;
        }
	}
	dd {
		display: none;
		float: right;
		margin: 60px 0 0 -100%;
		position: relative;
		width: 100%;
		z-index: 2;

		&.Active {
			display: block;
		}

		& > div {
			padding: $size 0;
		}
	}
}

.Box {
	background-color: white;
	@extend ._Clearfix;
	& > header {
		@extend ._Clearfix;
		padding: $size-s $size-n;

		// Pushing Box-Title to the left.
		& > .Box-Title {
			float: left;
		}

		// If Box Toolset is a list - display it inline without bullets.
		& ul.Box-Tools {
			@extend ._No-Bullets;
			@extend ._Inline;
		}

		// Box Toolset. Contains buttons.
		& .Box-Tools {
			display: inline-block;
			float: right;
			a {
				display: inline-block;
				padding: 0 $size-xs;
				color: $Clr-Secondary-Darker;
				&:hover {
					color: $Clr-Main;
				}
			}
		}
	}
	& > footer {
		margin: $size-n;
	}
	& > .Box-Content {
		padding: $size-s $size-n $size-n;
	}
	&.Round {
		@include Round(all);
	}
	&.Outlined {
		border: 2px solid $Clr-Secondary-Darker;
	}
	&.Underlined {
		& > header {
			border-bottom: 1px solid $Clr-Secondary-Darker;
		}
	}
	&.Solid {
		border-color: $Clr-Main;
		& > header {
			color: white;
			background-color: $Clr-Main;
			& a {
				color: white;
				&:hover {
					background-color: white;
				}
			}
		}
	}

	&.Success ,
	&.Info    ,
	&.Warning ,
	&.Error  {
		color: white;
		.Box-Tools a {
			color: white;
			&:hover {
				background-color: white;
			}
		}
	}
	&.Solid.Success ,
	&.Solid.Info    ,
	&.Solid.Warning ,
	&.Solid.Error  {
		.Box-Content {
			color: $Clr-Text-Main;
			background-color: white;
		}
	}
	&.Solid.Gradient.Success ,
	&.Solid.Gradient.Info    ,
	&.Solid.Gradient.Warning ,
	&.Solid.Gradient.Error  {
		header {
			color: white;
		}
	}
	&.Underlined.Success ,
	&.Underlined.Info    ,
	&.Underlined.Warning ,
	&.Underlined.Error   {
		header {
			border-bottom-color: white;
		}
	}
	&.Outlined.Success ,
	&.Outlined.Info    ,
	&.Outlined.Warning ,
	&.Outlined.Error   {
		border: 2px solid white;
	}

	&.Success {
		background-color: $Clr-Success;
		&.Gradient {
			@include Gradient($Clr-Success, $Clr-Success-Dark, to right);
			.Box-Tools a:hover {
			}
		}
		&.Solid.Gradient {
			header {
				@include Gradient($Clr-Success, $Clr-Success-Dark, to right);
			}
		}
		.Box-Tools a {
			&:hover {
				color :$Clr-Success-Dark;
			}
		}
		&.Solid.Outlined {
			border-color: $Clr-Success;
		}
	}
	&.Info {
		background-color: $Clr-Info;
		&.Gradient {
			@include Gradient($Clr-Info, $Clr-Info-Dark, to right);
			.Box-Tools a:hover {
			}
		}
		.Box-Tools a {
			&:hover {
				color :$Clr-Info-Dark;
			}
		}
	}
	&.Warning {
		background-color: $Clr-Warning;
		&.Gradient {
			@include Gradient($Clr-Warning, $Clr-Warning-Dark, to right);
			.Box-Tools a:hover {
			}
		}
		.Box-Tools a {
			&:hover {
				color :$Clr-Warning-Dark;
			}
		}
	}
	&.Error {
		background-color: $Clr-Error;
		&.Gradient {
			@include Gradient($Clr-Error, $Clr-Error-Dark, to right);
			.Box-Tools a:hover {
			}
		}
		.Box-Tools a {
			&:hover {
				color :$Clr-Error-Dark;
			}
		}
	}
}
// MAGIC!
a.Button ,
button.Button,
input[type='submit'],
input[type='button']
{
	$Btn-BG-Color:			$Clr-Grey-Lighter;
	$Btn-Hover-BG-Color:	$Clr-Grey-Light;

	$Btn-Brd-Color:			$Clr-Grey-Light;
	$Btn-Hover-Brd-Color:	$Clr-Grey;

	padding: 				$size-xs $size-s;
	border: 				1px solid $Btn-Brd-Color;
 	background-color: 		$Btn-BG-Color;
	line-height: 			$line-height;
	color: 					black;
	font-size: 				14px;
	text-shadow:			1px 1px 1px white;
	box-shadow: 			0 0 2px rgba(255,255,255,.5) inset;

	@extend 		    	%_Clickable;
	@include            	Transition(#{border,background-color,color}, .3s);
	@include 				Round(all, $Control-Border-Radius);

	// State: HOVER
	&:hover {
		background-color: 	$Clr-Grey-Light;
		border: 			1px solid $Btn-Hover-Brd-Color;
	}

	// State:
	&[disabled] {
		color: 				$Clr-Grey;
		cursor: 			not-allowed;
		&:hover {
			background-color: 	$Btn-BG-Color;
			border-color:	1px solid $Btn-Brd-Color;
		}
	}

	// Button sizes
	&.Small {
		font-size: 			10px;
		padding: 			$size-xxs $size-xs;
	}
	&.Large {
		padding: 			$size-s $size-n;
	}
	&.Huge {
		font-size: 			19px;
		padding: 			$size-n $size;
	}

	// Button round corners
	&.Round {
		@include 			Round(all,$Control-Border-Radius * 2);
	}
	&.Search {
		@include 			Round(all, (($line-height)/2) + $size-xs);
		&.Large {
			@include 		Round(all, (($line-height)/2) + $size-s);
		}
		&.Huge {
			@include 		Round(all, (($line-height)/2) + $size-n);
		}
	}
	&.Icon {
		& > span.fa:first-child	 {
			margin-right: 	$size-s;
		}
	}

	&.Primary {
		border:				1px solid $Clr-Main-Dark;
		background-color: 	$Clr-Main;
		color: 				white;
		text-shadow:		1px 1px 1px $Clr-Main-Dark;

		&:hover {
			background-color: 	$Clr-Main-Dark;
		}
	}
	&.Ghost {
		color: $Clr-Midnight-Blue;
		background-color: transparent;
		border: 1px solid $Clr-Secondary-Dark;
		@extend .Round;
		&:hover {
			color: black;
			border-color: $Clr-Secondary-Darker;
			background-color: $Clr-Clouds;
		}
		&.Invert {
			color: white;
			border-color: white;
			&:hover {
				color: $Clr-Main;
				border-color: $Clr-Main;
			}
		}
	}
	&.Dropdown {
		position: relative;
		padding-right: 30px + $size-s;
		&.Round > .Dropdown-Toggle {
			@include Round(right, $Control-Border-Radius);
		}
		& > .Dropdown-Toggle {
			position: absolute;
			top: 0;
			right: 0;
			bottom: 0;
			display: block;
			width: 30px;
			padding: $size-s 0;
			border-left: 1px white solid;
			background-color: $Clr-Main;
			&:hover {
				background-color: $Clr-Main-Dark;
			}
		}
		& > .Dropdown-Content {
			background-color: white;
			border: 1px solid $Clr-Secondary-Dark;
			position: absolute;
			top: $line-height + ($size-xs * 2) + 3px;
			left: 0;
			width: 100%;
			z-index: 100;

			@extend ._No-Bullets;
			ul {
				@extend ._No-Bullets;
			}
			& li {
				& > a {
					display: block;
					padding: $size-xs $size-s;
					text-align: left;
					color: $Clr-Midnight-Blue;
					&:hover {
						background-color: $Clr-Secondary-Dark;
					}
				}
				&.Divider {
					padding: 0;
					display: block;
					border-top: 1px solid $Clr-Secondary-Dark;
				}
			}
			&.Icon {
				li a span.fa {
					margin-right: $size-s;
				}
			}
		}
		&.Round {
			& > .Dropdown-Content {
				@include Round(all, $Control-Border-Radius);
			}
		}
	}
	&.Info {
		background-color: $Clr-Info;
		&:hover {
			background-color: $Clr-Info-Dark;
		}
		&.Dropdown ,
		.Dropdown-Toggle {
			background-color: $Clr-Info-Dark;
			&:hover {
				background-color: $Clr-Info-Dark;
			}
		}
	}
	&.Success {
		background-color: $Clr-Success;
		&:hover {
			background-color: $Clr-Nephritis;
		}
		&.Dropdown ,
		.Dropdown-Toggle {
			background-color: $Clr-Success;
			&:hover {
				background-color: $Clr-Success-Dark;
			}
		}
	}
	&.Success {
		background-color: $Clr-Success;
		&:hover {
			background-color: $Clr-Success-Dark;
		}
		&.Dropdown ,
		.Dropdown-Toggle {
			background-color: $Clr-Success;
			&:hover {
				background-color: $Clr-Success-Dark;
			}
		}
	}
	&.Warning {
		background-color: $Clr-Warning;
		&:hover {
			background-color: $Clr-Warning-Dark;
		}
		&.Dropdown ,
		.Dropdown-Toggle {
			background-color: $Clr-Warning;
			&:hover {
				background-color: $Clr-Warning;
			}
		}
	}
	& + .Button {
		margin-left: $size-s;
	}
}

.Message {
	position: absolute;
	max-width: 	320px;
	@include 	Adaptive($Viewport-XS) {
		top: 	$size-l;
		right: 	$size-l;
	}
}


