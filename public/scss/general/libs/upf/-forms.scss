$Ctrl-Border-Color:			$Clr-Grey;
$Ctrl-Border-Radius:		3px;
$Ctrl-Focus-Color:			$Clr-Cyan;
$Ctrl-Border-Width:			1px;
$Ctrl-Line-Height:			1;
$Ctrl-Padding:				$size-s;

$Ctrl-Input-Width:			50%;
$Ctrl-Label-Width:			100% - $Ctrl-Input-Width;

$Ctrl-Wide-Input-Width:		75%;
$Ctrl-Wide-Label-Width:		100% - $Ctrl-Wide-Input-Width;

.Group		   ,
.Ctrl-Grp      ,
.Control-Group {
	border: solid 			$Ctrl-Border-Width transparent;
	@extend 				._Clearfix;

	label                  ,
	input:not([type='submit']),
	select                 ,
	textarea               {
		display: 			inline-block;
		padding: 			$Ctrl-Padding;
		border: 			solid $Ctrl-Border-Width;
		line-height: 		$Ctrl-Line-Height;
		@include Round(all, $Ctrl-Border-Radius);

		@include 			Adaptive-Mobile {
			width: 			100%;
		}
		@include 			Adaptive($Viewport-XS) {
			width: 			$Ctrl-Input-Width;
		}
	}
	input:not([type='submit']),
	select   ,
	textarea {
		box-shadow: 		0 2px 3px $Clr-Grey-Light inset;
		border-color: 		$Ctrl-Border-Color;
	}
	input:focus    ,
	select:focus   ,
	textarea:focus {
		outline: 0;
		border-color:		$Ctrl-Focus-Color;
		box-shadow: 		0 0 10px $Ctrl-Focus-Color;
	}

	label    {
		width: 				$Ctrl-Label-Width;
		padding-left: 		0;
		float: 				left;
		border-color: 		transparent;
	}
	textarea {
		font-family: 		$Font-Family-Open-Sans;
		resize: 			vertical;
	}
	.Input-Group {
		position: 			relative;
		&.Icon {
			&.Prefix  ,
			&.Postfix {
				span.fa {
					position: absolute;
					top: $size-s;
					color: $Clr-Grey-Dark;
 					font-size: 16px;
				}
			}
			&.Prefix {
				span.fa {
					left: $size-s;
				}
			}
			&.Postfix {
				span.fa {
					right: $size-s;

				}
			}
		}
	}
	&.Checkbox {

	}
	&.Radio {
		@extend 			._No-Bullets;
		li {
			width: 			100%;
			@extend 		._Clearfix;
		}

	}
	&.Checkbox ,
	&.Radio    {
		input[type='checkbox'] ,
		input[type='radio']    {
			width: 			13px;
			text-align: 	left;
			margin: 		$Ctrl-Padding 0;
			box-shadow: 	none;
			&:focus {
				box-shadow: none;
			}
		}
		@include 			Adaptive-Mobile {
			label {
				width: 		80%;
			}
			input {
				width: 		auto;
				box-shadow: none;
				float: 		right;
			}
		}
	}
	& + .Control-Group {
		margin: 			$size-s 0;
	}
	&.Offset {
		input[type='submit'] {
			box-shadow: none;
			width: 			auto;
			@include 		Adaptive($Viewport-XS) {
				margin-left: $Ctrl-Label-Width;
			}
		}
	}
}
form.Wide {
	.Group         ,
	.Ctrl-Grp      ,
	.Control-Group {
		input    ,
				 select   ,
				 textarea {
					 @include Adaptive($Viewport-XS) {
						 width: $Ctrl-Wide-Input-Width;
					 }
				 }
		label {
			@include Adaptive($Viewport-XS) {
				width: $Ctrl-Wide-Label-Width;
			}
		}
		&.Offset {
			margin-top: $size-n;
			input[type='submit'] {
				margin-left: $Ctrl-Wide-Label-Width;
			}
		}
	}
}
form.Vertical {
	label                  ,
	.Label-Group           ,
	input:not([type='submit']),
	select                 ,
	textarea               {
		width: 100%;
		float: none;
	}
	& > .Control-Group {
		&.Checkbox.Submit {
			input[type='checkbox'] {
				margin-top: $Ctrl-Padding;
				margin-right: $size-n;
				float: left;
			}
			label {
				float: left;
				display: inline-block;
				width: auto;
			}
			input[type='submit'] {
				margin-left: 0;
				float: right;
			}
		}
		.Label-Group {
			@extend ._Clearfix;
			label {
				width: auto;
				float: left;
			}
			.SubLabel {
				padding: $Ctrl-Padding 0;
				display: inline-block;
				float: right;
				border: 1px solid transparent;
				line-height: $Ctrl-Line-Height;
			}
		}
	}

}

// FIX reCaptcha
#recaptcha_widget_div{
  display: inline-block;
  width:70%;
}

#recaptcha_widget_div .recaptchatable {
  border: none !important;
  width: 100%;
  padding-bottom: 10px !important;
  display: block;
}


#recaptcha_widget_div .recaptchatable .recaptcha_image_cell,
#recaptcha_widget_div .recaptchatable td{
  padding: 0px 7px 0px 0px !important;
}

#recaptcha_widget_div .recaptchatable #recaptcha_image{
  margin: 0px;
  border:none !important;
}

dl.Tabs {
	clear: both;
	@extend ._Clearfix;

	dt {
		margin-left: -1px;
		position: 		relative;
		display: 		table;
		width: 			30%;
		float: 			left;
		min-height: 	48px;
		padding: 		$size-xs 0;
		background-color: $Clr-Clouds;
		color:			$Clr-Midnight-Blue;
		text-align: 	center;
		cursor: 		pointer;

		@include Transition(#{background-color, color}, 0.5s);

		& > span {
			vertical-align: 	middle;
			display: 			table-cell;
			font-size: 			85%;
		}

		&:hover {
			background-color: $Clr-Silver;
		}

		&.Active {
			background-color: $Clr-Midnight-Blue;
			color: #fff;
		}
		&.Wide {
			width: 40%;
		}

        &.inTwo{
            width:50%;
        }
	}
	dd {
		display: none;
		float: right;
		margin: 60px 0 0 -100%;
		position: relative;
		width: 100%;
		z-index: 2;

		&.Active {
			display: block;
		}

		& > div {
			padding: $size 0;
		}
	}
}

.Box {
	background-color: white;
	@extend ._Clearfix;
	& > header {
		@extend ._Clearfix;
		padding: $size-s $size-n;

		// Pushing Box-Title to the left.
		& > .Box-Title {
			float: left;
		}

		// If Box Toolset is a list - display it inline without bullets.
		& ul.Box-Tools {
			@extend ._No-Bullets;
			@extend ._Inline;
		}

		// Box Toolset. Contains buttons.
		& .Box-Tools {
			display: inline-block;
			float: right;
			a {
				display: inline-block;
				padding: 0 $size-xs;
				color: $Clr-Secondary-Darker;
				&:hover {
					color: $Clr-Main;
				}
			}
		}
	}
	& > footer {
		margin: $size-n;
	}
	& > .Box-Content {
		padding: $size-s $size-n $size-n;
	}
	&.Round {
		@include Round(all);
	}
	&.Outlined {
		border: 2px solid $Clr-Secondary-Darker;
	}
	&.Underlined {
		& > header {
			border-bottom: 1px solid $Clr-Secondary-Darker;
		}
	}
	&.Solid {
		border-color: $Clr-Main;
		& > header {
			color: white;
			background-color: $Clr-Main;
			& a {
				color: white;
				&:hover {
					background-color: white;
				}
			}
		}
	}

	&.Success ,
	&.Info    ,
	&.Warning ,
	&.Error  {
		color: white;
		.Box-Tools a {
			color: white;
			&:hover {
				background-color: white;
			}
		}
	}
	&.Solid.Success ,
	&.Solid.Info    ,
	&.Solid.Warning ,
	&.Solid.Error  {
		.Box-Content {
			color: $Clr-Text-Main;
			background-color: white;
		}
	}
	&.Solid.Gradient.Success ,
	&.Solid.Gradient.Info    ,
	&.Solid.Gradient.Warning ,
	&.Solid.Gradient.Error  {
		header {
			color: white;
		}
	}
	&.Underlined.Success ,
	&.Underlined.Info    ,
	&.Underlined.Warning ,
	&.Underlined.Error   {
		header {
			border-bottom-color: white;
		}
	}
	&.Outlined.Success ,
	&.Outlined.Info    ,
	&.Outlined.Warning ,
	&.Outlined.Error   {
		border: 2px solid white;
	}

	&.Success {
		background-color: $Clr-Success;
		&.Gradient {
			@include Gradient($Clr-Success, $Clr-Success-Dark, to right);
			.Box-Tools a:hover {
			}
		}
		&.Solid.Gradient {
			header {
				@include Gradient($Clr-Success, $Clr-Success-Dark, to right);
			}
		}
		.Box-Tools a {
			&:hover {
				color :$Clr-Success-Dark;
			}
		}
		&.Solid.Outlined {
			border-color: $Clr-Success;
		}
	}
	&.Info {
		background-color: $Clr-Info;
		&.Gradient {
			@include Gradient($Clr-Info, $Clr-Info-Dark, to right);
			.Box-Tools a:hover {
			}
		}
		.Box-Tools a {
			&:hover {
				color :$Clr-Info-Dark;
			}
		}
	}
	&.Warning {
		background-color: $Clr-Warning;
		&.Gradient {
			@include Gradient($Clr-Warning, $Clr-Warning-Dark, to right);
			.Box-Tools a:hover {
			}
		}
		.Box-Tools a {
			&:hover {
				color :$Clr-Warning-Dark;
			}
		}
	}
	&.Error {
		background-color: $Clr-Error;
		&.Gradient {
			@include Gradient($Clr-Error, $Clr-Error-Dark, to right);
			.Box-Tools a:hover {
			}
		}
		.Box-Tools a {
			&:hover {
				color :$Clr-Error-Dark;
			}
		}
	}
}
// MAGIC!
a.Button ,
.Button {
	padding: $size-xs $size-s;
	border: 0;
	line-height: $line-height;
	background-color: $Clr-Main;
	color: white;
	font-size: 14px;
	@extend %_Clickable;
	@include Transition(#{border,background-color,color}, .3s);

	&:hover {
		background-color: $Clr-Main-Dark;
	}
	&.Small {
		font-size: 10px;
		padding: $size-xxs $size-xs;
	}
	&.Large {
		padding: $size-s $size-n;
	}
	&.Huge {
		font-size: 19px;
		padding: $size-n $size;
	}
	&.Round {
		@include Round(all,$Control-Border-Radius);
	}
	&.Search {
		@include Round(all, (($line-height)/2) + $size-xs);
		&.Large {
			@include Round(all, (($line-height)/2) + $size-s);
		}
		&.Huge {
			@include Round(all, (($line-height)/2) + $size-n);
		}
	}
	&.Icon {
		& > span.fa:first-child	 {
			margin-right: $size-s;
		}
	}
	&.Ghost {
		color: $Clr-Midnight-Blue;
		background-color: transparent;
		border: 1px solid $Clr-Secondary-Dark;
		@extend .Round;
		&:hover {
			color: black;
			border-color: $Clr-Secondary-Darker;
			background-color: $Clr-Clouds;
		}
		&.Invert {
			color: white;
			border-color: white;
			&:hover {
				color: $Clr-Main;
				border-color: $Clr-Main;
			}
		}
	}
	&.Dropdown {
		position: relative;
		padding-right: 30px + $size-s;
		&.Round > .Dropdown-Toggle {
			@include Round(right, $Control-Border-Radius);
		}
		& > .Dropdown-Toggle {
			position: absolute;
			top: 0;
			right: 0;
			bottom: 0;
			display: block;
			width: 30px;
			padding: $size-s 0;
			border-left: 1px white solid;
			background-color: $Clr-Main;
			&:hover {
				background-color: $Clr-Main-Dark;
			}
		}
		& > .Dropdown-Content {
			background-color: white;
			border: 1px solid $Clr-Secondary-Dark;
			position: absolute;
			top: $line-height + ($size-xs * 2) + 3px;
			left: 0;
			width: 100%;
			z-index: 100;

			@extend ._No-Bullets;
			ul {
				@extend ._No-Bullets;
			}
			& li {
				& > a {
					display: block;
					padding: $size-xs $size-s;
					text-align: left;
					color: $Clr-Midnight-Blue;
					&:hover {
						background-color: $Clr-Secondary-Dark;
					}
				}
				&.Divider {
					padding: 0;
					display: block;
					border-top: 1px solid $Clr-Secondary-Dark;
				}
			}
			&.Icon {
				li a span.fa {
					margin-right: $size-s;
				}
			}
		}
		&.Round {
			& > .Dropdown-Content {
				@include Round(all, $Control-Border-Radius);
			}
		}
	}
	&.Info {
		background-color: $Clr-Info;
		&:hover {
			background-color: $Clr-Info-Dark;
		}
		&.Dropdown ,
		.Dropdown-Toggle {
			background-color: $Clr-Info-Dark;
			&:hover {
				background-color: $Clr-Info-Dark;
			}
		}
	}
	&.Success {
		background-color: $Clr-Success;
		&:hover {
			background-color: $Clr-Nephritis;
		}
		&.Dropdown ,
		.Dropdown-Toggle {
			background-color: $Clr-Success;
			&:hover {
				background-color: $Clr-Success-Dark;
			}
		}
	}
	&.Success {
		background-color: $Clr-Success;
		&:hover {
			background-color: $Clr-Success-Dark;
		}
		&.Dropdown ,
		.Dropdown-Toggle {
			background-color: $Clr-Success;
			&:hover {
				background-color: $Clr-Success-Dark;
			}
		}
	}
	&.Warning {
		background-color: $Clr-Warning;
		&:hover {
			background-color: $Clr-Warning-Dark;
		}
		&.Dropdown ,
		.Dropdown-Toggle {
			background-color: $Clr-Warning;
			&:hover {
				background-color: $Clr-Warning;
			}
		}
	}

}

.Message {
	position: absolute;
	max-width: 	320px;
	@include 	Adaptive($Viewport-XS) {
		top: 	$size-l;
		right: 	$size-l;
	}
}