$Control-Border-Width: 1px;
$Control-Border-Color: $C-Grey-4;
$Control-Bg-Color: $C-Grey-6;
$Control-Border-Radius: 5px;
$Control-Padding: 7px;
$Control-Left-Column-Width: 30%;
$Control-Right-Column-Width: 100% - $Control-Left-Column-Width;
$Control-Font-Size: 14px;
$Control-Line-Height: $Control-Font-Size;
$Control-Height: $Control-Line-Height + ($Control-Padding * 2) + ($Control-Border-Width * 2);
$Control-Color: $C-Grey-1;

$Control-Bg-Color-Hover: $C-Grey-5;

$Control-Bg-Color-Disabled: $C-Grey-5;
$Control-Border-Color-Disabled: $C-Grey-4;
$Control-Color-Disabled: $C-Grey-4;

$Control-Border-Color-Focus: $C-Cyan-1;
$Control-Bg-Color-Focus: $C-Cyan-5;

$Control-Textarea-Line-Height: ceil($Control-Font-Size * 1.45);
$Control-Textarea-Min-Rows: 2;
$Control-Textarea-Min-Height: ($Control-Textarea-Line-Height * $Control-Textarea-Min-Rows) + ($Control-Padding * 2) + ($Control-Border-Width * 2);
$Control-Textarea-Min-Height-Focus: ($Control-Textarea-Line-Height * ($Control-Textarea-Min-Rows + 2)) + ($Control-Padding * 2) + ($Control-Border-Width * 2);
$Control-MultiSelect-Min-Height:$Control-Textarea-Min-Height*4;

$Control-Button-Bg-Color: $C-Cyan-3;
$Control-Button-Bg-Color-Hover: $C-Cyan-2;
$Control-Button-Border-Color:  $C-Cyan-1;

$Checkbox-Margin:  0px;
$Checkbox-Height: $Control-Height - $Checkbox-Margin;
$Checkbox-Width: $Checkbox-Height * 2;
$Checkbox-Border: $Control-Border-Width;
$Checkbox-Fnt-Size: 14px;
$Checkbox-Border-Radius: $Checkbox-Height;
$Checkbox-Toggle-Spacing: 2px;
$Checkbox-Toggle-Diameter: $Checkbox-Height - ($Checkbox-Toggle-Spacing * 2) - ($Checkbox-Border * 2);

%Control
{
	display: inline-block;
	height: $Control-Height;

	border: $Control-Border-Width $Control-Border-Color solid;
	border-radius: $Control-Border-Radius;
	outline: 0;

	font-size: $Control-Font-Size;
	line-height: $Control-Line-Height;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Default controls styling
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


input[type='text'],
input[type='tel'],
input[type='submit'],
input[type='button'],
input[type='search'],
input[type='email'],
input[type='file'],
select,
textarea,
.Dropdown
{
	padding: $Control-Padding;
	box-shadow: 0 0 1px white inset;
	background-color: $Control-Bg-Color;
	color: $Control-Color;
	@extend %Control;

	@include Transitions(#{border-color .4s, background-color .4s, color .4s});

	&:hover
	{
		background-color: $C-Grey-5;
	}
	&:focus
	{
		border-color: $Control-Border-Color-Focus;
		background-color: $Control-Bg-Color-Focus;
		box-shadow: 0 0 1px white inset,
		0 0 10px $C-Cyan-3;
	}
	&[disabled],
	&[disabled]:hover
	{
		border-color: $Control-Border-Color-Disabled;
		background-color: $Control-Bg-Color-Disabled;
		color: $Control-Color-Disabled;
		cursor: not-allowed;
	}
	&.Ghost
	{
		border-color: transparent;
		background: transparent;
		box-shadow: none;
		&:focus
		{

		}
	}
	&.Error
	{
		color: $C-Red-1;
		border-color: $C-Red-2;
		background-color: $C-Red-6;
	}
	&.Warning
	{
		color: $C-Orange-1;
		border-color: $C-Orange-2;
		background-color: $C-Orange-6;
	}
	&.Success
	{
		color: $C-Green-1;
		border-color: $C-Green-2;
		background-color: $C-Green-6;
	}
	&.Info
	{
		color: $C-Blue-1;
		border-color: $C-Blue-2;
		background-color: $C-Blue-6;
	}
}
label
{
	@extend ._Unselectable;
	&.Control-Group
	{
		@extend %Clickable;
	}
}
select
{
	padding: $Control-Padding - 2;
}

select:focus
{
	@include Round(top, $Control-Border-Radius);
}
select[multiple='multiple']{
	-moz-appearance: button;
	min-height: $Control-MultiSelect-Min-Height;
}
textarea
{
	resize: vertical;
	line-height: $Control-Textarea-Line-Height;
	min-height: $Control-Textarea-Min-Height;
	@include Transition(min-height, .5s);
	&:focus
	{
		background-color: $Control-Bg-Color;
		min-height: $Control-Textarea-Min-Height-Focus;
	}
}
input[type='file']
{
	-moz-appearance: button;
	padding: $Control-Padding - 4px;
}
input[type='submit'],
input[type='button'],
button
{
	border-color: $Control-Button-Border-Color;
	background-color: $Control-Button-Bg-Color;
	color: white;
	@extend %Clickable;
	&:hover
	{
		background-color: $Control-Button-Bg-Color-Hover;
	}
}

Label.File-Upload
{
	width: 100%;
	display: block;
	padding: 0!important;
	text-align: left;
	input[type='file']
	{
		height: 0;
		padding: 0;
		border: 0;
		visibility: hidden;
	}
	& > span
	{
		padding: $Control-Padding;
		@extend %Control;
		&:hover
		{
			border-color: $C-Grey-4;
			background-color: $Control-Bg-Color-Hover;
		}
		& > span.fa
		{
			margin-right: $size-s;
		}

	}
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Form-Group is a bunch of Control-Groups separated vertically
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
.Form-Group + .Form-Group
{
	margin-top: $size-xl;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


.Control-Group
{
	@extend ._Clearfix;
	label
	{
		height: $Control-Height;
		padding: $Control-Padding;
		border: $Control-Border-Width solid transparent;

		font-size: $Control-Font-Size;
		line-height: $Control-Line-Height;

		@extend %Clickable;
	}
	input,
	select,
	textarea
	{
		width: 100%;
	}
	input
	select
	{
		background-color: white;
	}
	input[type='checkbox'].Slide
	{
		-webkit-appearance: none;

		position: relative;

		width: $Checkbox-Width;
		height: $Checkbox-Height;
		margin: $Checkbox-Margin 0;

		border: $Checkbox-Border solid transparent;
		border-radius: $Checkbox-Height;
		background-color: $Clr-Main;
		box-shadow: none;
		@extend %Clickable;

		-webkit-transition: background-color .5s,
		border-color .5s;

		&:focus
		{
			outline: 0;
			border-color: $Clr-Main-Dark;
		}
		&:after
		{
			position: absolute;
			content: '';

			left: $Checkbox-Toggle-Spacing;
			top: $Checkbox-Toggle-Spacing;

			width: $Checkbox-Toggle-Diameter;
			height: $Checkbox-Toggle-Diameter;

			border-radius: $Checkbox-Toggle-Diameter;
			background-color: white;


			-webkit-transition: left .3s;

		}
		&:before
		{
			position: absolute;
			content: 'x';
			top: ($Checkbox-Height - $Checkbox-Fnt-Size - ($Checkbox-Border *2) )/2;
			left: $Checkbox-Width - 20px;
			line-height: $Checkbox-Fnt-Size;
			font-size: $Checkbox-Fnt-Size;
			color: white;
		}
		&:hover
		{
			background-color: $Clr-Main-Dark;
		}
	}

	input[type='checkbox'].Slide:checked
	{
		background-color: $Clr-Success;

		&:after
		{
			left: $Checkbox-Width - $Checkbox-Toggle-Diameter - ($Checkbox-Border * 2) - $Checkbox-Toggle-Spacing;
		}
		&:before
		{
			content: 'o';
			top: ($Checkbox-Height - ($Checkbox-Border * 2) - $Checkbox-Fnt-Size) / 2;
			left: 10px;
		}
		&:hover
		{
			background-color: $Clr-Success-Dark;
		}
		&:focus
		{
			border-color: $Clr-Success-Dark;
		}
	}

	input[type='checkbox'][disabled].Slide,
	input[type='checkbox'][disabled].Slide:hover
	{
		cursor: default;
		background-color: $Clr-Grey;
	}
	& + .Control-Group
	{
		margin-top: $size-n;
	}
	.Input-Group.Error
	{
		color: white;
		background-color: $Clr-Error;
		border-radius: $Control-Border-Radius;
		input.Error,
		select.Error,
		textarea.Error
		{
			border-color: $C-Red-2;
			color: $C-Red-1;
		}
	}
	.Input-Group .Message
	{
		display: block;
		padding: $Control-Padding;
		&.Error
		{
			color: white;
		}
	}
	.Input-Group.Merge
	{
		input[type='text'],
		input[type='tel'],
		input[type='password'],
		input[type='file'],
		input[type='button'],
		input[type='submit']
		{
			border-radius: 0;
			&:first-child
			{
				border-right: 0;
				border-radius: $Control-Border-Radius 0 0 $Control-Border-Radius;
			}
			&:last-child
			{
				border-left: 0;
				border-radius: 0 $Control-Border-Radius $Control-Border-Radius 0;
			}
		}
	}
	.Input-Group.Vertical
	{
		input
		{
			display: block;
			width: 100%;
			margin: 0;
			border-radius: 0;
			&:first-child
			{
				border-bottom: 0;
				border-radius: $Control-Border-Radius $Control-Border-Radius 0 0;
			}
			&:last-child
			{
				border-top: 0;
				border-radius: 0 0 $Control-Border-Radius $Control-Border-Radius;
			}
		}
	}
	.Input-Group.Prefix,
	.Input-Group.Postfix
	{
		span, label
		{
			padding: $Control-Padding;
			height: $Control-Height;
			border: $Control-Border-Width $Control-Border-Color solid;
			background-color: #eee;

			text-align: center;
			font-size: $Control-Font-Size - 2px;
			line-height: $Control-Line-Height;
			color: #888;
			box-shadow: 0 0 1px white inset;
		}
	}
	.Input-Group.Prefix
	{
		span, label
		{
			border-radius: $Control-Border-Radius 0 0 $Control-Border-Radius;
		}
	}
	.Input-Group.Postfix
	{
		span
		{
			border-radius: 0 $Control-Border-Radius $Control-Border-Radius 0;

		}
	}
	.Input-Group.Button
	{
		input[type='button'],
		input[type='submit'],
		button
		{

		}
	}
	.Input-Group.Upload
	{
		input[type='file']
		{
			display: block;
			width: 100%;
		}
		ul
		{
			margin-top: $size-n;
			li
			{
				position: relative;
				overflow: hidden;
				a.Link-Delete
				{
					position: absolute;
					display: block;
					padding: $Control-Padding;
					right: 0;
					bottom: - ($Control-Height + 4px);
					width: 100%;
					background-color: $Clr-Main;
					color: white;
				}
				img
				{
					width: 100%;
				}
				&:hover a
				{
					bottom: 0;
				}
			}
		}
	}
}
.Vertical
{
	.Control-Group
	{
		& > label,
		& > .Label-Group
		{
			display: block;
			padding: $Control-Padding 0;
			.Left
			{
				float: left;
				padding: $Control-Padding 0;
			}
			a.Right
			{
				float: right;
				padding: $Control-Padding 0;
			}
		}
	}
}


.Invert
{
	.Control-Group
	{
		label
		{
			color: white;
		}
		input,
		select,
		textarea
		{
			color: white;
			background-color: rgba(0,0,0,.2);
			border: $Control-Border-Width solid white;
			box-shadow: none;
		}
		select option
		{
			background-color: white;
			color: black;
		}
	}
}
@include Adaptive($Viewport-XS)
{
	.Inline > .Control-Group + .Control-Group
	{
		margin-top: 0;
	}
}

// FIX reCaptcha
#recaptcha_widget_div{
  display: inline-block;
  width:70%;
}

#recaptcha_widget_div .recaptchatable {
  border: none !important;
  width: 100%;
  padding-bottom: 10px !important;
  display: block;
}


#recaptcha_widget_div .recaptchatable .recaptcha_image_cell,
#recaptcha_widget_div .recaptchatable td{
  padding: 0px 7px 0px 0px !important;
}

#recaptcha_widget_div .recaptchatable #recaptcha_image{
  margin: 0px;
  border:none !important;
}
#recaptcha_response_field
{
	padding: $Control-Padding!important;
	border-color: $Control-Border-Color!important;
	width: 100%!important;
}

.Heading + dl.Tabs
{
	margin-top: $size-n;
}

// MAGIC!
a.Button ,
button.Button,
input[type='submit'],
input[type='button'],
span.Button
{
	$Btn-BG-Color:			$Clr-Grey-Lighter;
	$Btn-Hover-BG-Color:	$Clr-Grey-Light;

	$Btn-Brd-Color:			$Clr-Grey-Light;
	$Btn-Hover-Brd-Color:	$Clr-Grey;

	padding: 				$Control-Padding;
	border: 				$Control-Border-Width $Control-Border-Color solid;
 	background-color: 		$Control-Bg-Color;
	line-height: 			$Control-Line-Height;
	color: 					black;
	font-size: 				14px;
	text-shadow:			1px 1px 1px white;
	box-shadow: 			0 0 2px rgba(255,255,255,.5) inset;

	@extend 		    	%_Clickable;
	@include            	Transition(#{border,background-color,color}, .3s);
	@include 				Round(all, $Control-Border-Radius);

	// State: HOVER
	&:hover {
		background-color: 	$Control-Bg-Color-Hover;
		border-color:		$Control-Button-Border-Color;
	}

	// State:
	&[disabled] {
		color: 				$Clr-Grey;
		cursor: 			not-allowed;
		&:hover {
			background-color: 	$Btn-BG-Color;
			border-color:	1px solid $Btn-Brd-Color;
		}
	}
	&.Fluid
	{
		width: 100%;
	}
	// Button sizes
	&.Small {
		font-size: 			10px;
		padding: 			$size-xxs $size-xs;
	}
	&.Large {
		padding: 			$size-s $size-n;
	}
	&.Huge {
		font-size: 			19px;
		padding: 			$size-n $size;
	}

	// Button round corners
	&.Round {
		@include 			Round(all,$Control-Border-Radius * 2);
	}
	&.Search {
		@include 			Round(all, (($line-height)/2) + $size-xs);
		&.Large {
			@include 		Round(all, (($line-height)/2) + $size-s);
		}
		&.Huge {
			@include 		Round(all, (($line-height)/2) + $size-n);
		}
	}
	&.Icon {
		& > span.fa:first-child	 {
			margin-right: 	$size-s;
		}
	}

	&.Primary {
		border:				1px solid $Clr-Main-Dark;
		background-color: 	$Clr-Main;
		color: 				white;
		text-shadow:		1px 1px 1px $Clr-Main-Dark;

		&:hover {
			background-color: 	$Clr-Main-Dark;
		}
	}
	&.Ghost {
		color: $Clr-Midnight-Blue;
		background-color: transparent;
		border: 1px solid $Clr-Secondary-Dark;
		@extend .Round;
		&:hover {
			color: black;
			border-color: $Clr-Secondary-Darker;
			background-color: $Clr-Clouds;
		}
		&.Invert {
			color: white;
			border-color: white;
			&:hover {
				color: $Clr-Main;
				border-color: $Clr-Main;
			}
		}
	}
	&.Info,
	&.Success,
	&.Error,
	&.Warning
	{
		color: white;
		text-shadow: 1px 1px 2px rgba(0,0,0,.4);
		box-shadow: 0 0 1px rgba(255,255,255,0.4) inset;
	}
	&.Info {
		border-color: $C-Cyan-1;
		background-color: $C-Cyan-2;
		&:hover {
			background-color: $C-Cyan-1;
		}
	}
	&.Success {
		border-color: $C-Green-1;
		background-color: $C-Green-2;
		&:hover {
			background-color: $C-Green-1;
		}
	}
	&.Success {
		background-color: $Clr-Success;
		&:hover {
			background-color: $Clr-Success-Dark;
		}
	}
	&.Warning {
		background-color: $Clr-Warning;
		&:hover {
			background-color: $Clr-Warning-Dark;
		}
	}
	&.Error {
		border-color: $C-Red-1;
		background-color: $C-Red-2;
		&:hover {
			background-color: $C-Red-1;
		}
	}
	& + .Button {
		margin-left: $size-s;
	}
}

.Message {
	position: fixed;
	max-width: 	320px;
	@include 	Adaptive($Viewport-XS) {
		top: 	$size-l;
		right: 	$size-l;
	}
}










////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Badges
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

.Badge
{

	&.Error
	{
		background-color: $C-Red-1;
	}
	&.Primary
	{
		border-color: $Clr-Main-Dark;
		background-color: $Clr-Main;
		color: white;
	}
}